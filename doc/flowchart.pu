@startuml updateUserInfo@mounted
(*)-->"mounted"
-->"updateUserInfo"
if "クエリパラメータにsessionNameがある" then
  -->[true] "sessionNameをcookieに保存"
  -->"cookieの情報でDBアクセス"
else
  -->[false] if "cookieにsessionNameがある" then 
      -->[true] "cookieの情報でDBアクセス"
  else
      -->[false] "cookieからローカルの情報を更新"
      -->(*)
  endif
endif

"cookieの情報でDBアクセス"-->if "sessionにパスワードが設定されてる" then
  if "cookieにパスワードが保存されている" then
    -->[true] "DBからユーザー情報の更新"
  else
    -->[false] "モーダルでパスワードを受け付けてcookieに保存"
    -->"updateUserInfo"
  endif
else
    -->[false] "空文字列をパスワードとして保存する"
    -->"DBからユーザー情報の更新" 
    note right: cookieのパスワードを使う（他のDBアクセスでも）
endif

partition パスワードチェック処理 {
  "DBからユーザー情報の更新"-->if "パスワードが正しい" then 
  
    -->[true] "DBからローカルの情報を更新"
    -->(*)
  else
    -->[false] "cookieのパスワード情報を削除"
  endif
}
-->"updateUserInfo"

@enduml
' @startuml
' title updateUserInfo@mounted_repeatVer
' start
' repeat
'   :mounted;
'   if (クエリパラメータにsessionNameがある) then (true)
'     :sessionNameをcookieに保存（上書き）;
'   else(false)
'     if (cookieにsessionNameがある) then (true)
'     else (false)
'       :cookieからユーザー情報の更新;
'       stop
'     endif
'   endif
'   :cookieにあるsessionNameでDBアクセス;
'   if (sessionにパスワードが設定されてる) then (true)
'     if (cookieにパスワードが保存されている) then (true)
'     else (false)
'       :パスワード要求のモーダルを立ち上げる;
'       :入力されたパスワードをcookieに保存する;
'       stop
'     endif
'   else (false)
'       :空文字列をパスワードとして保存する;
'       note right
'         cookieのパスワードを使う
'         （他のDBアクセスでも）
'       end note
'   endif
'   :DBからユーザー情報の更新;
'   partition パスワードチェック処理 {
'     if (パスワードが正しい) then (true)
'       :DBの情報でローカルの情報を更新;
'     else (false)
'       :cookieのパスワード情報を削除;
'       stop
'     endif
'   }
' repeat while ()
' end
' @enduml
